data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
4cyl <- with(mtcars, tapply(mpg, cyl == 4, mean))
4cyl <- with(mtcars([, cyl] == 4), tapply(mpg, cyl, mean))
cyl_mpg <- with(mtcars, tapply(mpg, cyl, mean))
head(cyl_mpg)
cyl_mpg
cyl_mpg[, 1] - cyl_mpg[, 3]
cyl_mpg[2, 1] - cyl_mpg[2, 3]
head(mtcars)
with(mtcars, tapply(mpg, hp, mean))
with(mtcars, tapply(hp, cyl, mean))
209.21429 - 82.63636
?debug
setwd("C:/Users/Jake Stromecki/Desktop/Coursera/DataScience/JHU/Getting and Cleaning Data")
download.file(URL, destfile = "acs.csv")
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(URL, destfile = "acs.csv")
acs_data <- read.csv("acs.csv")
?which
which(AGS = 6 & AcR = 3)
which(AGS == 6 & AcR == 3)
agricultureLogical <- acs_data([, AGS] == 6 & [, ACR] == 3)
agricultureLogical <- acs_data[, AGS] == 6 & acs_data[, ACR] == 3
agricultureLogical <- (ACR == 3) & (AGS ==6)
agricultureLogical <- with(acs_data$ACR == 3 & acs_data$AGS ==6)
agricultureLogical <- with(acs_data, ACR == 3 & AGS ==6)
which(agricultureLogical)
acs_data[(acs_data$ACR ==3 & acs_data$AGS == 6),]
acs_data[which(acs_data$ACR ==3 & acs_data$AGS == 6),]
URL3a <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
URL3b <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(URL3a, destfile = "GDP.csv")
download.file(URL3b, destfile = "edu.csv")
GDP_data <- read.csv("GDP.csv")
edu_data <- read.csv("edu.csv")
?sort
?order
install.packages("plyr")
library(plyr)
?arrange
?desc
?rnorm
?cbind
?rbind
?head
?tail
?str
?quantile
?table
?any
?all
?colSums
?as.data.frame
?xtabs
?warpbreaks
ftable(xt)
?ftable
?object.size
?%in%
?ifelse
?cut
install.packages("Hmisc")
?factor
?class
?relevel
?as.numeric
?mutate
?melt
?dcast
install.packages("reshape2")
library(reshape2)
?dcast
?ddply
?ave
?dim
?order
?merge
?join
?rnorm
install.packages("jpeg")  ## if necessary
library(jpeg)
library(help = jpeg)
?readJPEG
URL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(URL2, destfile = "Question2.jpg")
picture <- readJPEG("Question2", native=TRUE)
picture <- readJPEG("Question2.jpg", native=TRUE)
download.file(URL2, destfile = "Question2.jpeg")
picture <- readJPEG("Question2.jpeg", native=TRUE)
?download.file
download.file(URL2, destfile = "Question2.jpeg", mode="wb")
picture <- readJPEG("Question2.jpeg", native=TRUE)
?quantile
quantile(picture, probs = (30, 80))
quantile(picture, probs = seq(30, 80))
quantile(picture, probs = seq(.3, .8))
quantile(picture, probs = seq(.3, .8))
quantile(picture, probs = seq(.3))
quantile(picture, probs = seq(.8))
quantile(picture, probs = seq(.8, .3))
quantile(picture, probs = seq(.8, 1))
quantile(picture, probs = seq(0, .3))
library(plyr)
head(GDP_data, 3)
head(GDP_data)
View(GDP_data)
head(edu_data)
View(GDP_data)
View(edu_data)
?merge
merge(GDP_data, edu_data, by.x="X", by.y="CountryCode", all=TRUE)
mergedData <- merge(GDP_data, edu_data, by.x="X", by.y="CountryCode", all=TRUE)
?sort
?arrange
sortedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
View(sortedData)
arrangeData <- arrange(mergedData, desc(Gross.domestic.product.2012))
?sort
sortedData <- (mergedData$Gross.domestic.product.2012, decreasing=TRUE, na.last=TRUE)
?rename
rename(mergedData, Gross.domestic.product.2012 = GDPRanking)
GDP <- mergedData$Ranking
head(mergedData, 3)
class(mergedData$Gross.domestic.product.2012)
mergedDataNumeric <- as.numeric(as.character(mergedData$Gross.domestic.product.2012))
mergedDataNumeric[1:10]
mergedDataNumeric <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedDataNumeric[1:10]
rename(mergedData, Gross.domestic.product.2012 = GDP_Rank)
?rename
rename(mergedData, GDP_Rank = Gross.domestic.product.2012)
x <- c(10, 2, 6, 12, 14, 15, 15, 24, 15, 25, 3, 12)
sum(x)
mean(x)
stdev(x)
help.search(standard deviation)
help.search("standard deviation")
sd(x)
?quartile
?quantile
fivenum(x)
median(x)
range(x)
IQR(x)
?IQR
3.5/2.1
58/12
85%12
5/3.3
library(SDSFoundations)
animaldata <- AnimalData
view(animaldata)
View(animaldata)
head(animaldata, 10)
?table
table(animaldata[1:10, "Outcome.Type"])
surrender <- animaldata$Intake.Type == "Owner Surrender"
surrrender$Neuter.State
animaldata[which(surrender), "Neutered.Status"]
animaldata[which(surrender), "Neutered.Status"][1,]
(animaldata[which(surrender), "Neutered.Status"])[1,]
?arrange
table(animaldata$Outcome.Type)
adopted <- animaldata[animaldata$Outcome.Type=="Adoption",]
daystoadopt <- adopted$Days.Shelter
hist(daystoadopt)
fivenum(daystoadopt)
which(animaldata$Days.Shelter==max(daystoadopt))
help.search("view row")
longstay <- animaldata[425,]
head(longstay)
mean(daystoadopt)
av <-mean(daystoadopt)
(longstay$Days.Shelter-av)/stdev
stdev <- sd(daystoadopt)
(longstay$Days.Shelter-av)/stdev
animaldata <- AnimalData
names(animaldata)
adults <- animaldata[animaldata$Age.Intake >=1,]
adultdogweight <- adults[adults$Animal.Type == "Dog", "Weight"]
adultcatweight <- adults[adults$Animal.Type == "Cat", "Weight"]
hist(adultdogweight)
len(adultdogweight)
length(adultdogweight)
length(adultcatweight)
hist(adultcatweight)
mean(adultdogweight)
median(adultdogweight)
sd(adultdogweight)
fivenum(adultdogweight)
mean(adultcatweight)
median(adultcatweight)
sd(adultcatweight)
fivenum(adultcatweight)
(13-mean(adultcatweight))/sd(adultcatweight)
fivenum(adultdogweight)
1-pnorm(2.3)
(1-pnorm(2.3))*100
mean(adultcatweight) + 3*sd(adultcatweight)
mean(adultcatweight) - 3*sd(adultcatweight)
mean(adultcatweight) - 2*sd(adultcatweight)
mean(adultcatweight) + 2*sd(adultcatweight)
max(adultdogweight)
summary(animaldata)
names(animaldata)
dogs <- animaldata[animaldata$Animal.Type == "Dog", ]
table(dogs$Intake.Type)
length(dogs)
81/291
ownersurrender <- dogs[dogs$Intake.Type == "Owner Surrender", ]
table(ownersurrender$Outcome.Type)
toowner <- ownersurrender[ownersurrender$Outcome.Type == "Return to Owner",]
mean(toowner$Days.Shelter)
6/.15
40*.55
44+18
80-62
mean(x)
x <- c(2, 2, 3, 4, 6, 7, 9, 14, 15, 18)
mean(x)
median(x)
mode(x)
fivenum(x)
range(x)
IQR(x)
x <- c(2, 2, 3, 5, 6, 7, 9, 14, 15, 18)
mean(x)
median(x)
mode(x)
fivenum(x)
range(x)
IQR(x)
x <- c(2, 2, 3, 5, 6, 7, 9, 13, 15, 18)
mean(x)
median(x)
mode(x)
fivenum(x)
range(x)
IQR(x)
x <- x + 2
x
mean(x)
median(x)
mode(x)
fivenum(x)
range(x)
IQR(x)
x <- c(2, 2, 3, 5, 6, 7, 9, 13, 15, 18)
x <- x * 2
x
mean(x)
median(x)
mode(x)
fivenum(x)
range(x)
meansleep <- 6.7
sdsleep <- 1.1
-1.5*1.1
-1.5*1.1 +6.7
6.7-1.1
(5.38-6.7)/1.1
z5.38 <- (5.38-6.7)/1.1
z8.79 <- (8.79-6.7)/1.1
pnorm
?pnorm
pnorm(z5.38) - pnorm(z8.79)
pnorm(z8.79) - pnorm(z5.38)
z4.5 <- (4.5-6.7)/1.1
1-pnorm(z4.5)
bull <- BullRiders
View(bull)
plot(bull$YearsPro, bull$BuckOuts)
plot(bull$YearsPro, bull$BuckOuts, xlab = "Years Pro", ylab="Buckouts", main="Plot of Years Pro vs. Buckouts")
max(bull$Height)
max(bull$Weight)
?plot
?hist
plot(bull$YearsPro, bull$BuckOuts, xlab = "Years Pro", ylab="Buckouts", main="Plot of Years Pro vs. Buckouts")
abline(lm(bull$BuckOuts~bull$YearsPro))
plot(bull$Events, bull$BuckOuts, xlab="Events", ylab="Buckouts", main="Events vs. Buckouts")
abline(lm(bull$BuckOuts~bull$Events))
?abline
?lm
?cor
cor(bull$YearsPro, bull$BuckOuts)
cor(bull$Events, bull$BuckOuts)
myvars <- c("YearsPro", "Events", "BuckOuts")
cor(bull[, myvars])
bul <- BullRiders
bull <- BullRiders
summary(bull)
names(bull)
morethanten <- bull[1:10, "YearsPro"]
which(morethanten > 10)
length(which(morethanten > 10))
fewbuckouts <- bull[min(bull$BuckOuts), "Rides"]
fewbuckouts <- bull[min(bull$BuckOuts), ]
fewbuckouts
fewbuckouts1 <- sort(bull$Buckouts)
?sort
fewbuckouts1 <- sort(bull$Buckouts, na.last=TRUE)
fewbuckouts1 <- sort(bull$BuckOuts, na.last=TRUE)
bull[bull$BuckOuts == 4,]
?min
names(bull)
plot(bull$RidePer, bull$Top10, xlab="Rides Per Attempt", ylab="Top 10 Finishies", main="Rides per Attempt vs. Top 10 Finishes")
abline(lm(bull$Top10, bull$RidePer))
abline(lm(bull$Top10~bull$RidePer))
cor(bull$RidePer, bull$Top10)
hist(bull$RidePer)
fivenum(bull$RidePer)
mean(bull$RidePer)
sd(bull$RidePer)
hist(bull$Top10)
fivenum(bull$Top10)
mean(bull$Top10)
sd(bull$Top10)
# Create a scatterplot
plot(bull$RidePer,bull$Top10)
# Add line of best fit
abline(lm(bull$Top10~bull$RidePer))
# Calculate the correlation coefficient
cor(bull$RidePer,bull$Top10)
# Create a correlation matrix
vars <- c("Top10", "RidePer")
cor(bull[,vars])
mean(bull$RidePer)
fivenum(bull$RidePer)
which(bull$Top10==5 & bull$RidePer==.53)
bull[16,]
bull <- BullRiders
summary(bull)
names(bull)
hist(bull$Earnings)
mean(bull$Earnings)
fivenum(bull$Earnings)
vars <- c("Earnings", "RidePer", "CupPoints")
cor(bull[,vars])
plot(bull$Earnings, bull$RidePer)
abline(lm(bull$RidePer~bull$Earnings))
plot(bull$RidePer, bull$Earnings)
abline(lm(bull$Earnings~bull$RidePer))
plot(bull$CupPoints, bull$Earnings)
abline(lm(bull$Earnings~bull$CupPoints))
which(bull$Earnings == max(bull$Earnings))
nooutlier <-bull[-1,]
cor(noutlier[,vars])
cor(nooutlier[,vars])
bull$RidesPerEvent <- bull$Rides/bull$Events
bull$RidesPerEvent <- bull$Rides/bull$Events
hits(bull$RidesPerEvent)
hist(bull$RidesPerEvent)
min(bull$RidesPerEvent)
median(bull$RidesPerEvent)
fivenum(bull$RidesPerEvent)
plot(bull$Place, bull$RidesPerEvent)
plot(bull$RidesPerEvent, bull$Place)
cor(bull$RidesPerEvent, bull$Place)
.75**2
.75^2
1 - .75**2
MinutesStudy <- c(30, 45, 180, 95, 130, 140, 30, 80, 60, 110, 0, 80)
ExamGrade <- c(74, 68, 87, 90, 94, 84, 92, 88, 82, 93, 65, 90)
?data.frame
data <- data.frame(MinutesStudy, ExamGrade)
cor(data$MinutesStudy, data$ExamGrade)
plot(data$MinutesStudy, data$ExamGrade)
abline(lm(data$ExamGrade~data$MinutesStudy))
r <- cor(data$MinutesStudy, data$ExamGrade)
r**2
outlier = data[data$MinutesStudy < 50 & data$ExamGrade > 90,]
outlier
plot(data$ExamGrade, data$MinutesStudy)
abline(lm(data$MinutesStudy~data$ExamGrade))
nooutlier <- data - outlier
which(data$MinutesStudy < 50 & data$ExamGrade > 90,)
nooutlier <- data[-7,]
plot(nooutlier$ExamGrade, data$MinutesStudy)
plot(nooutlier$ExamGrade, nooutlier$MinutesStudy)
abline(lm(nooutlier$MinutesStudy~nooutlier$ExamGrade))
cor(nooutlier$ExamGrade, nooutlier$MinutesStudy)
GDP_data <- read.csv("GDP.csv")
edu_data <- read.csv("edu.csv")
mergedData <- merge(GDP_data, edu_data, by.x="X", by.y="CountryCode", all=FALSE)
View(mergedData)
sortedData <- (mergedData$Gross.domestic.product.2012, decreasing=TRUE, na.last=TRUE)
rename(mergedData, GDP_Rank = Gross.domestic.product.2012)
GDP <- mergedData$Gross.domestic.product.2012
GDP
GDP <- as.numeric(GDP)
sort(GDP, descending=TRUE, na.last=TRUE)
sort(GDP, decreasing=TRUE, na.last=TRUE)
sortedData <- (as.numeric(mergedData$Gross.domestic.product.2012), decreasing=TRUE, na.last=TRUE)
GDP <- mergedData$Gross.domestic.product.2012
rename(mergedData, GDP = Gross.domestic.product.2012)
?rename
mergedData <- (rename(mergedData, GDP = Gross.domestic.product.2012))
vars <- c('X','X.2')
GDP <- mergedData$Gross.domestic.product.2012, mergedData[,vars]
GDP <- mergedData[,vars]
View(GDP)
vars <- c('X','X.2','Gross.domestic.product.2012')
GDP <- mergedData[,vars]
GDP <- as.numeric(GDP$Gross.domestic.product.2012)
sort(GDP, decreasing=TRUE, na.last=TRUE)
GDP <- mergedData[,vars]
GDP$Gross.domestic.product.2012 <- as.numeric(GDP$Gross.domestic.product.2012)
sort(GDP$Gross.domestic.product.2012, decreasing=TRUE, na.last=TRUE)
sorted <- sort(GDP$Gross.domestic.product.2012, decreasing=TRUE, na.last=TRUE)
arrangeData <- arrange(GDP, desc(Gross.domestic.product.2012))
View(arrangeData)
noOECD <- mergedData["Income.Group" == "High income: nonOECD",]
noOECD <- mergedData[mergedData$Income.Group == "High income: nonOECD",]
mean(noOECD$Gross.domestic.product.2012)
mean(asnumeric(noOECD$Gross.domestic.product.2012))
mean(as.numeric(noOECD$Gross.domestic.product.2012))
OECD <- mergedData[mergedData$Income.Group == "High income: OECD",]
mean(as.numeric(OECD$Gross.domestic.product.2012))
setwd("C:/Users/Jake Stromecki/Desktop/Coursera/DataScience/JHU/Getting and Cleaning Data")
?unzip
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(URL, destfile = "projectdata.zip")
unzip("projectdata.zip", exdir = "projectdata")
unlink("projectdata.zip")
setwd("projectdata/UCI HAR Dataset")
?cbind
subject <- data.frame(read.table("test/subject_test"))
setwd("C:/Users/Jake Stromecki/Desktop/Coursera/DataScience/JHU/Getting and Cleaning Data/projectdata/UCI HAR Dataset")
subject <- data.frame(read.table("test/subject_test"))
subject <- data.frame(read.table("test/subject_test.txt"))
View(subject)
?read.table
